@using Banko.Client.Models.Account
@using Banko.Client.Helper

<MudPaper Class="pa-4 rounded-lg mud-height-full" Elevation="0">

  <MudStack Row AlignItems="AlignItems.Center" Class="mb-2">
    <MudIcon Icon="@Icons.Material.Filled.Info" />
    <MudText Typo="Typo.h6" Class="mr-2">Account Insights</MudText>
  </MudStack>

  @if (accounts?.Length > 0)
  {
    <MudStack Row>
      <MudText Typo="Typo.body2">Average Balance:</MudText>
      <MudText Typo="Typo.subtitle2">@CurrencyFormatter.FormatCurrency(accounts.Average(a => a.Balance))</MudText>
    </MudStack>

    @if (accounts.OrderBy(a => a.Balance).FirstOrDefault() is AccountRead lowestBalanceAccount && accounts.Length
      > 1)
    {
      <MudStack Row>
        <MudText Typo="Typo.body2">Lowest Balance:</MudText>
        <MudText Typo="Typo.subtitle2">@CurrencyFormatter.FormatCurrency(lowestBalanceAccount.Balance)</MudText>
      </MudStack>
    }

    @if (accounts.OrderByDescending(a => a.CreatedAt).FirstOrDefault() is AccountRead newestAccount)
    {
      <MudStack Row>
        <MudText Typo="Typo.body2">Newest Account:</MudText>
        <MudText Typo="Typo.subtitle2">@newestAccount.AccountNumber</MudText>
      </MudStack>
    }
  }
  else
  {
    <MudAlert Severity="Severity.Info" Class="mt-3">No additional account insights available.</MudAlert>
  }
</MudPaper>

@code {
  [Parameter] public AccountRead[]? accounts { get; set; }
}