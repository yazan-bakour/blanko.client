@page "/"
@using Banko.Client.Models.Account
@using Banko.Client.Models.Transaction
@using Banko.Client.Services
@using Banko.Client.Services.Account
@using Banko.Client.Services.User
@using Banko.Client.Services.Transaction
@using MudBlazor
@using Microsoft.AspNetCore.Components.Web
@using Banko.Client.Pages.Main

@inject ISnackbar Snackbar
@inject LoadingService LoadingService
@inject TransactionStateService TransactionState
@inject IDialogService DialogService
@inject NavigationManager NavigationManager
@inject AccountStateService AccountState
@inject UserStateService UserState
@inject IJSRuntime JSRuntime

<PageTitle>Home</PageTitle>


<MudItem Class="relative overflow-hidden mud-drawer-container">
  <MudDrawerContainer Class="mud-height-full">
    <MudDrawer Class="mud-drawer-account" @bind-Open="@_open" Anchor="Anchor.Right" Elevation="0"
      Variant="@DrawerVariant.Persistent">
      <MudDrawerHeader Class="d-flex align-center p-0 height-0 min-height-0">
        <MudIconButton Icon="@Icons.Material.Filled.Close" Color="Color.Primary" OnClick="@ToggleDrawer"
          aria-label="Toggle drawer" Size="Size.Medium" Class="mr-2" />
        <MudText Typo="Typo.h6">Account details</MudText>
      </MudDrawerHeader>
      <MudItem>
        <MudStack Spacing="3" Class="pt-3">

          <MudTextField T="string" Label="IBAN" Value="Account?.AccountNumber" Variant="Variant.Filled" ReadOnly="true"
            Adornment="Adornment.End" IconSize="Size.Small" AdornmentIcon="@Icons.Material.Filled.ContentCopy"
            Underline="false" AdornmentColor="Color.Primary"
            OnAdornmentClick="@(() => CopyToClipboardAsync(Account?.AccountNumber ?? string.Empty))" />

          <MudDivider Class="my-2" />

          <MudStack Row="true" AlignItems="AlignItems.Start" Spacing="2">
            <MudIcon Icon="@Icons.Material.Filled.Lightbulb" Color="Color.Primary" Class="mt-1" />
            <MudText Typo="Typo.body2">Use these details to receive your salary and transfers from a Euro bank
              account.
            </MudText>
          </MudStack>

          <MudStack Row="true" AlignItems="AlignItems.Start" Spacing="2">
            <MudIcon Icon="@Icons.Material.Filled.Settings" Color="Color.Primary" Class="mt-1" />
            <MudText Typo="Typo.body2">
              Give these details to merchants to set up Direct Debits and automatically pay off your recurring bills.
            </MudText>
          </MudStack>

          <MudStack Row="true" AlignItems="AlignItems.Start" Spacing="2">
            <MudIcon Icon="@Icons.Material.Filled.AccessTime" Color="Color.Primary" Class="mt-1" />
            <MudText Typo="Typo.body2">If the sending bank supports instant payments, the payment will arrive in a few
              seconds. Otherwise, it will take up to 2 working days.</MudText>
          </MudStack>
        </MudStack>
      </MudItem>
    </MudDrawer>
    <HomeContent @bind-Open="_open" ToggleDrawer="@ToggleDrawer" />
  </MudDrawerContainer>
</MudItem>

@code
{
  private AccountRead? Account => AccountState.CurrentAccounts?.FirstOrDefault() ?? null;
  private bool _open = false;
  [Parameter] public EventCallback<bool> OpenChanged { get; set; }
  private void ToggleDrawer()
  {
    _open = !_open;
  }
  private async Task LoadInitialDataAsync()
  {
    LoadingService.IsLoading = true;
    StateHasChanged();
    try
    {
      await UserState.LoadUserDataAsync();
      if (UserState.CurrentUser != null)
      {
        await AccountState.InitializeAccountStateAsync(UserState.CurrentUser.User.Id, true);
      }
    }
    catch (Exception ex)
    {
      Snackbar.Add($"Error loading data: {ex.Message}", Severity.Error);
    }
    finally
    {
      LoadingService.IsLoading = false;
      StateHasChanged();
    }
  }
  private async Task CopyToClipboardAsync(string text)
  {
    await JSRuntime.InvokeVoidAsync("navigator.clipboard.writeText", text);
    Snackbar.Add("Copied to clipboard!", Severity.Success, config => { config.ShowCloseIcon = false; });
  }
}
<style>
  .mud-drawer-container {
    min-height: 480px;
  }

  .mud-drawer-account>.mud-drawer-content>.mud-drawer-header {
    min-height: 0;
  }

  .mud-drawer-account {
    padding: 8px;
    border-radius: var(--mud-default-borderradius);
    color: var(--mud-palette-text-primary);
    background-color: var(--mud-palette-surface);
    width: 400px;
    --mud-palette-primary-hover: rgba(237 240 243 / 31%) !important;
  }
</style>