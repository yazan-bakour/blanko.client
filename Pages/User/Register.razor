@page "/register"
@using Banko.Client.Models
@using Banko.Client.Services.User
@inject UserStateService UserState
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar

<MudCard Elevation="25" Class="pa-4">
  <MudCardContent>
    <MudForm Model="@registerModel" @ref="form" @bind-IsValid="@success">
      <MudTextField Label="Full Name" @bind-Value="registerModel.FullName" For="@(() => registerModel.FullName)"
        Immediate="true" Required />
      <MudTextField Label="Email" @bind-Value="registerModel.Email" For="@(() => registerModel.Email)" Immediate="true"
        Required />
      <MudTextField Label="Password" @bind-Value="registerModel.Password" For="@(() => registerModel.Password)"
        Immediate="true" Required />
    </MudForm>
  </MudCardContent>
  <MudCardActions Class="d-flex justify-center">
    <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="px-8" Size="Size.Large"
      Disabled="@(!success || isLoading)" OnClick="HandleLogin">
      @if (isLoading)
      {
        <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
        <MudText Class="ms-2">Processing</MudText>
      }
      else
      {
        <MudText>Register</MudText>
      }
    </MudButton>
  </MudCardActions>
</MudCard>

@code {
  private UserRegister registerModel = new();
  private bool success;
  private MudForm? form;
  private bool isLoading = false;

  private async Task HandleLogin()
  {
    await form!.Validate();
    if (form.IsValid)
    {
      try
      {
        isLoading = true;
        await UserState.RegisterAsync(registerModel);
        Snackbar.Add("Registration successful! Please login now.", Severity.Success);
        NavigationManager.NavigateTo("/login");
      }
      catch (Exception ex)
      {
        Snackbar.Add(ex.Message, Severity.Error);
      }
      finally
      {
        isLoading = false;
      }
    }
  }
}