@using Banko.Client.Models
@using Banko.Client.Services.Auth
@using Banko.Client.Services.User
@using Banko.Client.Services

@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar
@inject LoadingService LoadingService
@inject IAuthService AuthService

<MudDrawer @bind-Open="@Open" Elevation="1" Variant="@DrawerVariant.Persistent">
  <MudDrawerHeader Class="justify-space-between">
    <AuthorizeView>
      <Authorized>
        <MudText Typo="Typo.h6" Color="Color.Success">Banko</MudText>
      </Authorized>
      <NotAuthorized>
        <MudText Typo="Typo.h6" Color="Color.Error">Banko</MudText>
      </NotAuthorized>
    </AuthorizeView>
  </MudDrawerHeader>
  <MudNavMenu>
    <MudNavLink Match="NavLinkMatch.All" Href="">Home</MudNavLink>
    <AuthorizeView>
      <Authorized>
        @{
          var userId = context.User.FindFirst(ClaimTypes.NameIdentifier);
          var userName = context.User.Identity?.Name ?? "User";
        }
        <MudNavLink Href="profile">@userName Profile</MudNavLink>
        @if (!string.IsNullOrEmpty(userId?.Value))
        {
          <MudNavLink Href=@($"account/{userId}")>Account</MudNavLink>
        }
        <MudNavLink Href="dashboard">Dashboard</MudNavLink>
        <MudNavLink Href="funds">Funds</MudNavLink>
        <MudNavLink Href="transactions">Transactions</MudNavLink>
        <MudNavLink @onclick="() => HandleLogout()">Logout</MudNavLink>
      </Authorized>
      <NotAuthorized>
        <MudNavLink Href="login">Login</MudNavLink>
        <MudNavLink Href="register">Register</MudNavLink>
      </NotAuthorized>
    </AuthorizeView>
  </MudNavMenu>
</MudDrawer>

@code {
  [Parameter]
  public bool Open { get; set; }
  [Parameter]
  public EventCallback<bool> OpenChanged { get; set; }

  private async Task HandleLogout()
  {
    await AuthService.LogoutAsync();
    await OpenChanged.InvokeAsync(false);
  }
}
}